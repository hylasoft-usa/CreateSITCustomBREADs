using System;
using System.Collections.Generic;
using System.Text;
using System.Web.UI.WebControls;
using System.Web.UI;

namespace SIT.Libs.Base.CAB.Web.Controls.ContextMenu.Events
{
    /// <summary>
    /// Provides data for the command event generated by a ContextMenu object
    /// </summary>
    public class ContextMenuCommandEventArgs : CommandEventArgs
    {
        #region variables
        Control sourceControl;       
        #endregion

        #region Contructors
        /// <summary>
        /// Initializes a new instance of the ContextMenuCommandEventArgs
        /// class with another System.Web.UI.WebControls.CommandEventArgs object and
        /// a source System.Web.UI.Control object which originated the event
        /// </summary>
        /// <param name="e">A System.Web.UI.WebControls.CommandEventArgs that contains the event data</param>
        /// <param name="sourceControl">A System.Web.UI.Control object which originated the event</param>
        public ContextMenuCommandEventArgs(CommandEventArgs e, Control sourceControl)
            : base(e)
        {
            this.sourceControl = sourceControl;
        }

        /// <summary>
        /// Initializes a new instance of the ContextMenuCommandEventArgs
        /// class with the specified command name, argument and a source 
        /// System.Web.UI.Control object which originated the event
        /// </summary>
        /// <param name="commandName">The name of the command</param>
        /// <param name="argument">A System.Object that contains the arguments for the command</param>
        /// <param name="sourceControl">A System.Web.UI.Control object which originated the event</param>
        public ContextMenuCommandEventArgs(string commandName, Object argument, Control sourceControl)
            : base(commandName, argument)
        {
            this.sourceControl = sourceControl;
        }
        #endregion

        #region Properties
        /// <summary>
        /// Gets or sets the System.Web.UI.Control object which originated the event
        /// </summary>
        public Control SourceControl
        {
            get 
            { 
                return sourceControl; 
            }

            set 
            { 
                sourceControl = value; 
            }
        }
        #endregion
    }

    /// <summary>
    /// Represents the method that will handle the ContextMenuCommandEventArgs event
    /// </summary>
    /// <param name="sender">The source of the event</param>
    /// <param name="e">A ContextMenuCommandEventArgs that contains the event data</param>
    public delegate void ContextMenuCommandEventHandler(Object sender, ContextMenuCommandEventArgs e);
}
